name: Android UI Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ui_tests:
    # Use macOS runner to support hardware acceleration with HAXM
    runs-on: macos-latest

    steps:
    # 1. Clone the repository
    - name: Check out repository
      uses: actions/checkout@v2

    # 2. Set up JDK 17 (required for newer SDK Manager)
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '17'

    # 3. Set up Android SDK
    - name: Set up Android SDK
      uses: android-actions/setup-android@v2
      with:
        api-level: 30
        build-tools: 30.0.3
        cache: gradle

    # 4. Start Android emulator for UI tests
    - name: Set up environment for Android Emulator
      run: |
        sudo apt-get update
        sudo apt-get install -y adb android-sdk
    
    - name: Start Android emulator
      run: |
        # Define variables
        ANDROID_HOME=$HOME/Android/Sdk
        AVD_NAME="test_avd"
        
        # Create an AVD if it doesn't exist
        echo "no" | avdmanager create avd -n $AVD_NAME -k "system-images;android-30;default;x86_64" -d "Nexus 6" --force
    
        # Start the emulator
        $ANDROID_HOME/emulator/emulator -avd $AVD_NAME -no-window -no-audio -port 5556 &
    
        # Wait for the emulator to boot
        adb wait-for-device
        adb shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'
    
        echo "Emulator started on port 5556"
    
    - name: Disable animations
      run: |
        adb shell settings put global window_animation_scale 0
        adb shell settings put global transition_animation_scale 0
        adb shell settings put global animator_duration_scale 0


    # 5. Verify ADB Connection
    - name: Check Emulator Status
      run: adb devices

    # 6. Wait for the Android Emulator to boot (with timeout)
    - name: Wait for Android Emulator to boot
      run: |
        boot_timeout=300 # Set timeout to 5 minutes
        boot_time=0
        until adb shell getprop sys.boot_completed | grep -m 1 '1'; do
          if [ $boot_time -ge $boot_timeout ]; then
            echo "Emulator boot timed out after $boot_timeout seconds."
            adb -s emulator-5556 emu kill # Terminate emulator
            exit 1
          fi
          echo "Waiting for emulator to boot..."
          sleep 10
          boot_time=$((boot_time + 10))
        done
        echo "Emulator booted successfully."

    # 7. Check Emulator Log (optional, for troubleshooting)
    - name: Print Emulator Log
      run: adb logcat -d

    # 8. Run UI tests
    - name: Run UI tests
      run: ./gradlew connectedAndroidTest

    # 9. Upload UI test results (optional)
    - name: Upload UI test results
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: ui-test-results
        path: app/build/reports/androidTests/connected
